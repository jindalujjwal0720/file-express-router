"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{6423:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/file-express-router/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/file-express-router/docs/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Quick Start Guide","href":"/file-express-router/docs/getting-started/quick-start","docId":"getting-started/quick-start","unlisted":false}],"href":"/file-express-router/docs/category/getting-started"},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dynamic Route Parameters","href":"/file-express-router/docs/features/dynamic-route-params","docId":"features/dynamic-route-params","unlisted":false},{"type":"link","label":"HTTP Method Handlers","href":"/file-express-router/docs/features/http-methods","docId":"features/http-methods","unlisted":false},{"type":"link","label":"Middleware Management","href":"/file-express-router/docs/features/middlewares","docId":"features/middlewares","unlisted":false}],"href":"/file-express-router/docs/category/features"},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic API Server","href":"/file-express-router/docs/tutorials/basic-api","docId":"tutorials/basic-api","unlisted":false},{"type":"link","label":"Authentication System","href":"/file-express-router/docs/tutorials/basic-authentication","docId":"tutorials/basic-authentication","unlisted":false}],"href":"/file-express-router/docs/category/tutorials"},{"type":"link","label":"API Reference","href":"/file-express-router/docs/api","docId":"api","unlisted":false}]},"docs":{"api":{"id":"api","title":"API Reference","description":"Router","sidebar":"tutorialSidebar"},"features/dynamic-route-params":{"id":"features/dynamic-route-params","title":"Dynamic Route Parameters","description":"Dynamic route parameters allow you to define flexible routes that can handle different inputs dynamically. This is useful when creating routes that depend on user-provided values, such as IDs or slugs.","sidebar":"tutorialSidebar"},"features/http-methods":{"id":"features/http-methods","title":"HTTP Method Handlers","description":"In file-express-router, HTTP method handlers allow you to define how your routes should respond to various HTTP requests like GET, POST, PUT, DELETE, etc. Each route file can have one or more handlers that correspond to the HTTP methods supported for that route. This approach simplifies route handling by providing a clear structure for each type of request.","sidebar":"tutorialSidebar"},"features/middlewares":{"id":"features/middlewares","title":"Middleware Management","description":"Middleware in file-express-router allows you to handle requests and responses by adding layers of logic between the client and your route handlers. You can apply middleware at the directory, giving you flexibility and control over how you manage requests. Additionally, error handling is streamlined with built-in support for error middleware, and the order in which middleware is applied can be controlled.","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"To get started with file-express-router, you need to install it as a dependency in your Node.js project. Follow these steps:","sidebar":"tutorialSidebar"},"getting-started/quick-start":{"id":"getting-started/quick-start","title":"Quick Start Guide","description":"This guide will help you quickly set up and use file-express-router in your Node.js project.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Welcome to the file-express-router documentation! This library is a simple, easy-to-use, lightweight, zero-configuration file-based routing system for Express.js. It allows you to define your routes in separate files and directories, making your codebase more organized and easier to maintain.","sidebar":"tutorialSidebar"},"tutorials/basic-api":{"id":"tutorials/basic-api","title":"Basic API Server","description":"In this tutorial, you\u2019ll learn how to set up a basic API server using File Express Router. By the end, you\u2019ll have a working server with a few routes to handle HTTP requests.","sidebar":"tutorialSidebar"},"tutorials/basic-authentication":{"id":"tutorials/basic-authentication","title":"Authentication System","description":"In this tutorial, you\u2019ll learn how to implement a basic authentication system using File Express Router. We\u2019ll cover user registration, login, and protected routes using JSON Web Tokens (JWT). By the end, you\u2019ll have a working authentication system integrated into your API.","sidebar":"tutorialSidebar"}}}}')}}]);