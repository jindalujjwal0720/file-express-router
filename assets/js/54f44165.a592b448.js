"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[924],{4575:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting-started/installation","title":"Installation","description":"To get started with file-express-router, you need to install it as a dependency in your Node.js project. Follow these steps:","source":"@site/docs/getting-started/installation.md","sourceDirName":"getting-started","slug":"/getting-started/installation","permalink":"/file-express-router/docs/getting-started/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/installation.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/file-express-router/docs/category/getting-started"},"next":{"title":"Quick Start Guide","permalink":"/file-express-router/docs/getting-started/quick-start"}}');var t=r(4848),i=r(8453);const l={sidebar_position:1},a="Installation",o={},d=[{value:"Step 1: Install the Package",id:"step-1-install-the-package",level:3},{value:"Step 2: Install peer dependencies",id:"step-2-install-peer-dependencies",level:3},{value:"Step 3: Verify Installation",id:"step-3-verify-installation",level:3},{value:"Step 4: Set Up Your Project",id:"step-4-set-up-your-project",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"installation",children:"Installation"})}),"\n",(0,t.jsxs)(n.p,{children:["To get started with ",(0,t.jsx)(n.code,{children:"file-express-router"}),", you need to install it as a dependency in your Node.js project. Follow these steps:"]}),"\n",(0,t.jsx)(n.h3,{id:"step-1-install-the-package",children:"Step 1: Install the Package"}),"\n",(0,t.jsx)(n.p,{children:"You can install File Express Router using npm or yarn:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"// Using npm\r\nnpm install file-express-router\r\n\r\n// Using yarn\r\nyarn add file-express-router\n"})}),"\n",(0,t.jsx)(n.h3,{id:"step-2-install-peer-dependencies",children:"Step 2: Install peer dependencies"}),"\n",(0,t.jsxs)(n.p,{children:["File Express Router requires ",(0,t.jsx)(n.strong,{children:"Express.js"})," as a peer dependency. If you don\u2019t already have Express installed, add it to your project:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"// Using npm\r\nnpm install express\r\n\r\n// Using yarn\r\nyarn add express\n"})}),"\n",(0,t.jsx)(n.h3,{id:"step-3-verify-installation",children:"Step 3: Verify Installation"}),"\n",(0,t.jsxs)(n.p,{children:["After installation, you can verify that the package is installed correctly by checking your ",(0,t.jsx)(n.code,{children:"package.json"})," file. It should include ",(0,t.jsx)(n.code,{children:"file-express-router"})," and ",(0,t.jsx)(n.code,{children:"express"})," in the dependencies section."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\r\n  "dependencies": {\r\n    "express": "^4.17.1",\r\n    "file-express-router": "^1.0.0"\r\n  }\r\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"That\u2019s it! You have successfully installed File Express Router in your Node.js project. You can now start using it to create routes based on file structure."}),"\n",(0,t.jsx)(n.h3,{id:"step-4-set-up-your-project",children:"Step 4: Set Up Your Project"}),"\n",(0,t.jsx)(n.p,{children:"Once installed, you\u2019re ready to set up your project. Here\u2019s a minimal example to get started:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create a new directory for your project (if you haven\u2019t already):"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mkdir my-express-app\r\ncd my-express-app\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Initialize a new Node.js project (if you haven\u2019t already):"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm init -y\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Create the following folder structure:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"my-express-app/\r\n\u251c\u2500\u2500 routes/\r\n\u2502   \u251c\u2500\u2500 status.get.ts\r\n\u2502   \u2514\u2500\u2500 users/\r\n\u2502       \u2514\u2500\u2500 [id].get.ts\r\n\u251c\u2500\u2500 app.ts\r\n\u2514\u2500\u2500 package.json\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsxs)(n.li,{children:["Add the following code to ",(0,t.jsx)(n.code,{children:"app.ts"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import express from 'express';\r\nimport path from 'path';\r\n// highlight-next-line\r\nimport { Router } from 'file-express-router';\r\n\r\nconst startServer = async () => {\r\n  const app = express();\r\n\r\n  // highlight-start\r\n  const routesDir = path.join(__dirname, 'routes');\r\n  const router = await Router({ dir: routesDir });\r\n  app.use('/api', router);\r\n  // highlight-end\r\n\r\n  app.listen(6969, () => {\r\n    console.log('Server is running on http://localhost:6969');\r\n  });\r\n};\r\n\r\nstartServer();\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsxs)(n.li,{children:["Add a simple route in ",(0,t.jsx)(n.code,{children:"routes/status.get.ts"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { RequestHandler } from 'express';\r\n\r\nconst handler: RequestHandler = (req, res) => {\r\n  res.json({ message: 'Ping Pong!' });\r\n};\r\n\r\nexport default handler;\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"6",children:["\n",(0,t.jsxs)(n.li,{children:["Add a dynamic route in ",(0,t.jsx)(n.code,{children:"routes/users/[id].get.ts"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { RequestHandler } from 'express';\r\n\r\nconst handler: RequestHandler = (req, res) => {\r\n  res.json({ userId: req.params.id });\r\n};\r\n\r\nexport default handler;\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"7",children:["\n",(0,t.jsx)(n.li,{children:"Start your server:"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," If you are using ",(0,t.jsx)(n.strong,{children:"nodemon"}),", you have to ignore the ",(0,t.jsx)(n.code,{children:"routes/index.ts"})," and ",(0,t.jsx)(n.code,{children:"routes/index.js"})," files to prevent nodemon from restarting the server on file changes in the ",(0,t.jsx)(n.code,{children:"routes"})," directory."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npx ts-node app.ts\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"8",children:["\n",(0,t.jsx)(n.li,{children:"Test your routes:"}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Open ",(0,t.jsx)(n.a,{href:"http://localhost:6969/api/status",children:"http://localhost:6969/api/status"})," in your browser or API client."]}),"\n",(0,t.jsxs)(n.li,{children:["Open ",(0,t.jsx)(n.a,{href:"http://localhost:6969/api/users/123",children:"http://localhost:6969/api/users/123"})," in your browser or API client."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var s=r(6540);const t={},i=s.createContext(t);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);