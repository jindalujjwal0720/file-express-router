"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{7879:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"intro","title":"Introduction","description":"Welcome to the file-express-router documentation! This library is a simple, easy-to-use, lightweight, zero-configuration file-based routing system for Express.js. It allows you to define your routes in separate files and directories, making your codebase more organized and easier to maintain.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/file-express-router/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Getting Started","permalink":"/file-express-router/docs/category/getting-started"}}');var s=t(4848),i=t(8453);const o={sidebar_position:1},a="Introduction",d={},l=[{value:"What is file-based routing?",id:"what-is-file-based-routing",level:2},{value:"Why use it?",id:"why-use-it",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Automatic Route Registration",id:"automatic-route-registration",level:3},{value:"Dynamic Parameters",id:"dynamic-parameters",level:3},{value:"Directory level middleware",id:"directory-level-middleware",level:3},{value:"Error middleware",id:"error-middleware",level:3},{value:"Comparison with Other Libraries",id:"comparison-with-other-libraries",level:2},{value:"When to use? (and when not to)",id:"when-to-use-and-when-not-to",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,s.jsxs)(r.p,{children:["Welcome to the ",(0,s.jsx)(r.code,{children:"file-express-router"})," documentation! This library is a simple, easy-to-use, lightweight, zero-configuration file-based routing system for Express.js. It allows you to define your routes in separate files and directories, making your codebase more organized and easier to maintain."]}),"\n",(0,s.jsx)(r.h2,{id:"what-is-file-based-routing",children:"What is file-based routing?"}),"\n",(0,s.jsx)(r.p,{children:"File-based routing is a routing system where each route is defined in a separate file or directory. This approach makes it easier to manage your routes, as you can organize them into logical groups and keep them separate from your main application code."}),"\n",(0,s.jsxs)(r.p,{children:["With ",(0,s.jsx)(r.code,{children:"file-express-router"}),", you can define your routes in separate files and directories, and the library will automatically load and register them with Express.js. This makes it easy to add, remove, and modify routes without having to touch your main application code."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"routes/\n\u251c\u2500\u2500 users/             \u2192  GET    /users\n\u2502   \u251c\u2500\u2500 [id]/          \u2192  GET    /users/:id\n\u2502   \u2502   \u2514\u2500\u2500 posts/     \u2192  GET    /users/:id/posts\n\u2502   \u2514\u2500\u2500 active/        \u2192  GET    /users/active\n\u251c\u2500\u2500 auth/\n\u2502   \u251c\u2500\u2500 login/         \u2192  POST   /auth/login\n\u2502   \u2514\u2500\u2500 register/      \u2192  POST   /auth/register\n\u2514\u2500\u2500 health/            \u2192  GET    /health\n"})}),"\n",(0,s.jsx)(r.h2,{id:"why-use-it",children:"Why use it?"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Zero configuration"}),": No need to set up complex routing configurations. Just define your routes in separate files and directories, and the library will take care of the rest."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="app.ts"',children:"import { Router } from 'file-express-router';\nimport express from 'express';\nimport path from 'path';\n\nconst startServer = async () => {\n  const app = express();\n\n  // highlight-start\n  const router = await Router({\n    dir: path.join(__dirname, 'routes'),\n  });\n  app.use(router);\n  // highlight-end\n\n  app.listen(6969, () => {\n    console.log('Server is running on port 6969');\n  });\n};\n\nstartServer();\n"})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Organized codebase"}),": Keep your routes organized in separate files and directories, making it easier to find and manage them. No more scrolling through a single file to find a specific route."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"routes/\n\u251c\u2500\u2500 users/\n\u2502   \u251c\u2500\u2500 [id]/\n\u2502   \u2502   \u2514\u2500\u2500 posts/\n\u2502   \u2514\u2500\u2500 active/\n\u251c\u2500\u2500 auth/\n\u2502   \u251c\u2500\u2500 login/\n\u2502   \u2514\u2500\u2500 register/\n\u2514\u2500\u2500 health/\n"})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Built-in features"}),": ",(0,s.jsx)(r.code,{children:"file-express-router"})," comes with built-in support for route parameters, middleware, error handling, and more. You can take advantage of these features without having to write additional code."]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"\ud83d\ude80 Automatic route registration"}),"\n",(0,s.jsx)(r.li,{children:"\ud83c\udfaf Automatic routes index file generation"}),"\n",(0,s.jsx)(r.li,{children:"\ud83d\udcc2 Nested routes"}),"\n",(0,s.jsx)(r.li,{children:"\ud83d\udd04 Dynamic route parameters"}),"\n",(0,s.jsx)(r.li,{children:"\ud83d\udee1\ufe0f Middleware support"}),"\n",(0,s.jsx)(r.li,{children:"\u26a0\ufe0f Error middleware support"}),"\n",(0,s.jsx)(r.li,{children:"\ud83d\udcdd HTTP method based routing"}),"\n",(0,s.jsx)(r.li,{children:"\ud83d\udd12 Secure 404 handling"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Developer Experience"}),": Improve your development workflow by separating concerns and focusing on writing clean, modular routes. Spend less time configuring routing and more time building your application."]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"TypeScript support out of the box"}),"\n",(0,s.jsx)(r.li,{children:"Modular routes"}),"\n",(0,s.jsx)(r.li,{children:"Easy to search, navigate, and maintain routes (grep friendly)"}),"\n",(0,s.jsx)(r.li,{children:"Easy to add, remove, and modify routes"}),"\n",(0,s.jsx)(r.li,{children:"Clear separation of concerns"}),"\n",(0,s.jsx)(r.li,{children:"Simple and intuitive API"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsx)(r.h3,{id:"automatic-route-registration",children:"Automatic Route Registration"}),"\n",(0,s.jsx)(r.p,{children:"Define your routes in separate files and directories, and the library will automatically load and register them with Express.js without any additional configuration. This makes it easy to add, remove, and modify routes without having to touch your main application code."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="routes/products/featured.get.ts"',children:"// Automatically available at: GET /products/featured\nexport const handler = (req, res) => {\n    res.json({ featured: [] });\n};\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="routes/products/featured.post.ts"',children:"// Automatically available at: POST /products/featured\nexport const handler = (req, res) => {\n    res.status(405).send('Method Not Allowed');\n};\n"})}),"\n",(0,s.jsx)(r.h3,{id:"dynamic-parameters",children:"Dynamic Parameters"}),"\n",(0,s.jsxs)(r.p,{children:["Easily define dynamic route parameters in your route files using square brackets ",(0,s.jsx)(r.code,{children:"[]"}),". The library will automatically parse and extract these parameters from the request URL."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="routes/users/[id].get.ts"',children:"// Automatically available at: GET /users/:id\nexport const handler = (req, res) => {\n    const { id } = req.params;\n    res.json({ id });\n};\n"})}),"\n",(0,s.jsx)(r.h3,{id:"directory-level-middleware",children:"Directory level middleware"}),"\n",(0,s.jsx)(r.p,{children:"Apply middleware at the directory level to run middleware for all routes within that directory. This allows you to define common middleware for a group of routes without having to repeat it for each route."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="routes/users/index.middleware.ts"',children:"// Middleware applied to all routes in the 'users' directory\nexport const handler = (req, res, next) => {\n    console.log('Middleware for all user routes');\n    next();\n};\n"})}),"\n",(0,s.jsx)(r.h3,{id:"error-middleware",children:"Error middleware"}),"\n",(0,s.jsx)(r.p,{children:"Define error middleware to handle errors that occur during route processing. This allows you to centralize error handling logic and keep your route files clean and focused on route logic."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="routes/index.error.ts"',children:"// Error middleware to handle errors\nexport const handler = (err, req, res, next) => {\n    console.error(err);\n    res.status(500).json({ message: 'Internal Server Error' });\n};\n"})}),"\n",(0,s.jsx)(r.h2,{id:"comparison-with-other-libraries",children:"Comparison with Other Libraries"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"file-express-router"})," is not the only library that provides file-based routing for Express.js. Here's a quick comparison with some other popular libraries:"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Feature"}),(0,s.jsx)(r.th,{children:"File Express Router"}),(0,s.jsx)(r.th,{children:"Express Router"}),(0,s.jsx)(r.th,{children:"Next.js API Routes"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"File-System Routing"}),(0,s.jsx)(r.td,{children:"\u2705 Auto routes"}),(0,s.jsx)(r.td,{children:"\u274c Manual"}),(0,s.jsx)(r.td,{children:"\u2705 Auto routes"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Dynamic Parameters"}),(0,s.jsxs)(r.td,{children:["\u2705 ",(0,s.jsx)(r.code,{children:"[param]"})," syntax"]}),(0,s.jsxs)(r.td,{children:["\u2705 ",(0,s.jsx)(r.code,{children:":param"})]}),(0,s.jsxs)(r.td,{children:["\u2705 ",(0,s.jsx)(r.code,{children:"[param]"})," syntax"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Middleware Support"}),(0,s.jsx)(r.td,{children:"\u2705 File-level"}),(0,s.jsx)(r.td,{children:"\u2705 Manual"}),(0,s.jsx)(r.td,{children:"\u274c Limited"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"TypeScript Support"}),(0,s.jsx)(r.td,{children:"\u2705 Native"}),(0,s.jsx)(r.td,{children:"\u2705 Works"}),(0,s.jsx)(r.td,{children:"\u2705 Native"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Error Middleware"}),(0,s.jsx)(r.td,{children:"\u2705 Dedicated"}),(0,s.jsx)(r.td,{children:"\u274c Manual"}),(0,s.jsx)(r.td,{children:"\u274c Manual"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Route Guards"}),(0,s.jsx)(r.td,{children:"\u2705 Middleware-based"}),(0,s.jsx)(r.td,{children:"\u274c Manual"}),(0,s.jsx)(r.td,{children:"\u274c Manual"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Route Groups"}),(0,s.jsx)(r.td,{children:"\u2705 Directory-based"}),(0,s.jsx)(r.td,{children:"\u274c Manual"}),(0,s.jsx)(r.td,{children:"\u2705 Folder-based"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Customizability"}),(0,s.jsx)(r.td,{children:"\u2705 Full control"}),(0,s.jsx)(r.td,{children:"\u2705 Full control"}),(0,s.jsx)(r.td,{children:"\u274c Next.js only"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Performance"}),(0,s.jsx)(r.td,{children:"\u2705 Optimized"}),(0,s.jsx)(r.td,{children:"\u2705 Native"}),(0,s.jsx)(r.td,{children:"\u2705 Optimized"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Use Case"}),(0,s.jsx)(r.td,{children:"Standalone APIs"}),(0,s.jsx)(r.td,{children:"Custom setups"}),(0,s.jsx)(r.td,{children:"Full-stack apps"})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Here's a quick summary of the pros and cons of each library:"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Library"}),(0,s.jsx)(r.th,{children:"Pros"}),(0,s.jsx)(r.th,{children:"Cons"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"File Express Router"}),(0,s.jsx)(r.td,{children:"Auto routing, middleware"}),(0,s.jsx)(r.td,{children:"Needs Express.js"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Express Router"}),(0,s.jsx)(r.td,{children:"Full control, no overhead"}),(0,s.jsx)(r.td,{children:"Manual config, boilerplate"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Next.js API Routes"}),(0,s.jsx)(r.td,{children:"Integrated, easy to use"}),(0,s.jsx)(r.td,{children:"Limited to Next.js"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"when-to-use-and-when-not-to",children:"When to use? (and when not to)"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsxs)(r.strong,{children:["Use ",(0,s.jsx)(r.code,{children:"file-express-router"})," if"]}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"You want a simple, lightweight, and zero-configuration file-based routing system for Express.js."}),"\n",(0,s.jsx)(r.li,{children:"You prefer organizing your routes in separate files and directories."}),"\n",(0,s.jsx)(r.li,{children:"You want built-in support for route parameters, middleware, error handling, and more."}),"\n",(0,s.jsx)(r.li,{children:"You want to improve your development workflow by separating concerns and focusing on writing clean, modular routes."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsxs)(r.strong,{children:["Do not use ",(0,s.jsx)(r.code,{children:"file-express-router"})," if"]}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"You need advanced routing features that are not supported by the library."}),"\n",(0,s.jsx)(r.li,{children:"You prefer manual configuration and full control over your routing setup."}),"\n",(0,s.jsx)(r.li,{children:"You are using a different framework or platform that does not support Express.js."}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>a});var n=t(6540);const s={},i=n.createContext(s);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);