"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[624],{9362:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api","title":"API Reference","description":"Router","source":"@site/docs/api.md","sourceDirName":".","slug":"/api","permalink":"/file-express-router/docs/api","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Authentication System","permalink":"/file-express-router/docs/tutorials/basic-authentication"}}');var s=n(4848),t=n(8453);const o={},l="API Reference",c={},d=[{value:"Router",id:"router",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"dir",id:"dir",level:3},{value:"logger",id:"logger",level:3},{value:"include",id:"include",level:3},{value:"router",id:"router-1",level:3},{value:"require",id:"require",level:4},{value:"ts",id:"ts",level:4},{value:"Example",id:"example",level:2}];function h(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,s.jsx)(r.h2,{id:"router",children:"Router"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.strong,{children:"Router"})," function is the main entry point for the library. It initializes the router with the provided configuration and automatically loads and registers routes from the specified directory."]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Type"}),": ",(0,s.jsx)(r.code,{children:"function"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Description"}),": Initializes the router with the provided configuration. It automatically loads and registers routes from the specified directory."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"options"})," (object)","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"dir"})," (string) ",(0,s.jsx)(r.strong,{children:"Required"}),": The root directory where route files are located."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"logger"})," (boolean) ",(0,s.jsx)(r.strong,{children:"Optional"}),": A flag to enable or disable logging. Default is ",(0,s.jsx)(r.code,{children:"true"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"include"})," (string[]) ",(0,s.jsx)(r.strong,{children:"Optional"}),": An array of file extensions to include when searching for route files. Default is ",(0,s.jsx)(r.code,{children:"['.js', '.ts']"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"router"})," (object) ",(0,s.jsx)(r.strong,{children:"Optional"}),": Router file generation options.","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"require"})," (string) ",(0,s.jsx)(r.strong,{children:"Optional"}),": Whether to use ",(0,s.jsx)(r.code,{children:"require"})," or ",(0,s.jsx)(r.code,{children:"import"})," for route files. Default is ",(0,s.jsx)(r.code,{children:"import"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"ts"})," (boolean) ",(0,s.jsx)(r.strong,{children:"Optional"}),": Whether to generate TypeScript or JavaScript route files. Default is ",(0,s.jsx)(r.code,{children:"true"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.strong,{children:"Router"})," function accepts an object with the following configuration options:"]}),"\n",(0,s.jsx)(r.h3,{id:"dir",children:"dir"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Required"}),": Yes"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Type"}),": ",(0,s.jsx)(r.code,{children:"string"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Description"}),": The root directory where your route files are located. This is where the router will search for route files to register automatically."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"logger",children:"logger"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Required"}),": No"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Type"}),": ",(0,s.jsx)(r.code,{children:"boolean"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Default"}),": ",(0,s.jsx)(r.code,{children:"true"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Description"}),": A flag to enable or disable logging. When set to ",(0,s.jsx)(r.code,{children:"true"}),", the router will log information about registered routes and middleware."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"include",children:"include"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Required"}),": No"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Type"}),": ",(0,s.jsx)(r.code,{children:"string[]"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Default"}),": ",(0,s.jsx)(r.code,{children:"['.js', '.ts']"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Description"}),": An array of file extensions to include when searching for route files. By default, the router will only include ",(0,s.jsx)(r.code,{children:".js"})," and ",(0,s.jsx)(r.code,{children:".ts"})," files."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Allowed Values"}),": ",(0,s.jsx)(r.code,{children:"['.js', '.ts']"})]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"router-1",children:"router"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Required"}),": No"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Type"}),": ",(0,s.jsx)(r.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Description"}),": Router file generation options."]}),"\n",(0,s.jsx)(r.h4,{id:"require",children:"require"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Type"}),": ",(0,s.jsx)(r.code,{children:"string"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Default"}),": ",(0,s.jsx)(r.code,{children:"import"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Description"}),": Whether to use ",(0,s.jsx)(r.code,{children:"require"})," or ",(0,s.jsx)(r.code,{children:"import"})," for route files. When set to ",(0,s.jsx)(r.code,{children:"import"}),", the router will use ES modules for importing route files."]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"ts",children:"ts"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Type"}),": ",(0,s.jsx)(r.code,{children:"boolean"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Default"}),": ",(0,s.jsx)(r.code,{children:"true"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Description"}),": Whether to generate TypeScript or JavaScript route files. When set to ",(0,s.jsx)(r.code,{children:"true"}),", the router will generate TypeScript route files."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"import { Router } from 'file-express-router';\r\n\r\nconst startServer = async () => {\r\n  const app = express();\r\n\r\n  const routesDir = path.join(__dirname, 'routes');\r\n  const router = await Router({\r\n    // Required: The root directory where route files are located\r\n    dir: routesDir,\r\n    // Optional: Enable or disable logging\r\n    logger: true,\r\n    // Optional: An array of file extensions to include\r\n    include: ['.js', '.ts'],\r\n    // Optional: Router file generation options\r\n    router: {\r\n      // Optional: Whether to use `require` or `import` for route files\r\n      require: 'import',\r\n      // Optional: Whether to generate TypeScript or JavaScript route files\r\n      ts: true,\r\n    },\r\n  });\r\n\r\n  app.use('/api', router);\r\n\r\n  app.listen(6969, () => {\r\n    console.log('Server is running on http://localhost:6969');\r\n  });\r\n};\n"})})]})}function a(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>l});var i=n(6540);const s={},t=i.createContext(s);function o(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);